{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { Globals as Globals$1 } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { Globals, each, is, toArray, isFluidValue } from '@react-spring/shared';\nimport { createStringInterpolator } from '@react-spring/shared/stringInterpolation';\nimport { AnimatedObject, AnimationValue, AnimatedValue, extendAnimated, withAnimated } from '@react-spring/animated';\nimport colorNames from '@react-spring/shared/colors';\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\n\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n\n  const style = props.style,\n        children = props.children,\n        scrollTop = props.scrollTop,\n        scrollLeft = props.scrollLeft,\n        attributes = _objectWithoutPropertiesLoose(props, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, // Attributes are written in dash case\n  n => '-' + n.toLowerCase())));\n  Globals.frameLoop.onWrite(() => {\n    if (children !== void 0) {\n      instance.textContent = children;\n    } // Apply CSS styles\n\n\n    for (let name in style) {\n      if (style.hasOwnProperty(name)) {\n        const value = dangerousStyleValue(name, style[name]);\n        if (name === 'float') name = 'cssFloat';else if (isCustomPropRE.test(name)) {\n          instance.style.setProperty(name, value);\n        } else {\n          instance.style[name] = value;\n        }\n      }\n    } // Apply DOM attributes\n\n\n    names.forEach((name, i) => {\n      instance.setAttribute(name, values[i]);\n    });\n\n    if (scrollTop !== void 0) {\n      instance.scrollTop = scrollTop;\n    }\n\n    if (scrollLeft !== void 0) {\n      instance.scrollLeft = scrollLeft;\n    }\n  });\n}\n\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n/** The transform-functions\r\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\r\n * that you can pass as keys to your animated component style and that will be\r\n * animated. Perspective has been left out as it would conflict with the\r\n * non-transform perspective style.\r\n */\n\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/; // These keys have \"px\" units by default\n\nconst pxTransforms = /^(translate)/; // These keys have \"deg\" units by default\n\nconst degTransforms = /^(rotate|skew)/;\n/** Add a unit to the value when the value is unit-less (eg: a number) */\n\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n/**\r\n * Checks if the input value matches the identity value.\r\n *\r\n *     isValueIdentity(0, 0)              // => true\r\n *     isValueIdentity('0px', 0)          // => true\r\n *     isValueIdentity([0, '0px', 0], 0)  // => true\r\n */\n\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n/**\r\n * This AnimatedStyle will simplify animated components transforms by\r\n * interpolating all transform function passed as keys in the style object\r\n * including shortcuts such as x, y and z for translateX/Y/Z\r\n */\n\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let x = _ref.x,\n        y = _ref.y,\n        z = _ref.z,\n        style = _objectWithoutPropertiesLoose(_ref, [\"x\", \"y\", \"z\"]);\n    /**\r\n     * An array of arrays that contains the values (static or fluid)\r\n     * used by each transform function.\r\n     */\n\n\n    const inputs = [];\n    /**\r\n     * An array of functions that take a list of values (static or fluid)\r\n     * and returns (1) a CSS transform string and (2) a boolean that's true\r\n     * when the transform has no effect (eg: an identity transform).\r\n     */\n\n    const transforms = []; // Combine x/y/z into translate3d\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, isValueIdentity(xyz, 0)]);\n    } // Pluck any other transform-related props\n\n\n    each(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || '']);\n        transforms.push(transform => [transform, transform === '']);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\n        inputs.push(toArray(value));\n        transforms.push(key === 'rotate3d' ? _ref2 => {\n          let x = _ref2[0],\n              y = _ref2[1],\n              z = _ref2[2],\n              deg = _ref2[3];\n          return [`rotate3d(${x},${y},${z},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)];\n        } : input => [`${key}(${input.map(v => addUnit(v, unit)).join(',')})`, isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new SpringTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n/** Coerce any `FluidValue` to its current value */\n\n\nconst getValue = value => isFluidValue(value) ? value.get() : value;\n\nclass SpringTransform extends AnimationValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this.node = new AnimatedValue(this._compute());\n  } // Required by `AnimationValue` but never used.\n\n\n  get idle() {\n    return true;\n  }\n\n  _compute() {\n    let transform = '';\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getValue(input[0]);\n\n      const _this$transforms$i = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getValue)),\n            t = _this$transforms$i[0],\n            id = _this$transforms$i[1];\n\n      transform += ' ' + t;\n      identity = identity && id;\n    });\n    return identity ? 'none' : transform;\n  }\n  /** @internal */\n\n\n  _attach() {\n    // Start observing our inputs once we have an observer.\n    each(this.inputs, input => each(input, value => isFluidValue(value) && value.addChild(this)));\n  }\n  /** @internal */\n\n\n  _detach() {\n    // Stop observing our inputs once we have no observers.\n    each(this.inputs, input => each(input, value => isFluidValue(value) && value.removeChild(this)));\n  }\n  /** @internal */\n\n\n  onParentChange() {\n    // TODO: only compute once per frame max\n    const value = this._compute();\n\n    this.node.setValue(value);\n\n    this._onChange(value, true);\n  }\n\n}\n\nconst elements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nconst animated = extendAnimated(withAnimated, elements);\nGlobals$1.assign({\n  defaultElement: 'div',\n  colorNames,\n  applyAnimatedValues,\n  createStringInterpolator,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: _ref => {\n    let scrollTop = _ref.scrollTop,\n        scrollLeft = _ref.scrollLeft,\n        props = _objectWithoutPropertiesLoose(_ref, [\"scrollTop\", \"scrollLeft\"]);\n\n    return props;\n  }\n});\nexport { animated as a, animated };","map":{"version":3,"sources":["src/applyAnimatedValues.ts","src/AnimatedStyle.ts","src/elements.ts","src/animated.ts","src/index.ts"],"names":["isCustomPropRE","value","isUnitlessNumber","attributeCache","applyAnimatedValues","instance","props","isFilterElement","style","children","scrollTop","scrollLeft","attributes","values","Object","names","name","n","G","dangerousStyleValue","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","prefixes","acc","domTransforms","pxTransforms","degTransforms","addUnit","is","isValueIdentity","v","parseFloat","AnimatedStyle","AnimatedObject","constructor","x","y","z","inputs","transforms","xyz","each","transform","unit","toArray","deg","input","getValue","isFluidValue","_compute","identity","arg1","t","id","_attach","_detach","onParentChange","elements","animated","extendAnimated","Globals","defaultElement","createAnimatedStyle","getComponentProps"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { Globals as Globals$1 } from '@react-spring/core';\nexport * from '@react-spring/core';\nimport { Globals, each, is, toArray, isFluidValue } from '@react-spring/shared';\nimport { createStringInterpolator } from '@react-spring/shared/stringInterpolation';\nimport { AnimatedObject, AnimationValue, AnimatedValue, extendAnimated, withAnimated } from '@react-spring/animated';\nimport colorNames from '@react-spring/shared/colors';\n\nconst isCustomPropRE = /^--/;\n\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (typeof value === 'number' && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n\n  const isFilterElement = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n\n  const style = props.style,\n        children = props.children,\n        scrollTop = props.scrollTop,\n        scrollLeft = props.scrollLeft,\n        attributes = _objectWithoutPropertiesLoose(props, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, // Attributes are written in dash case\n  n => '-' + n.toLowerCase())));\n  Globals.frameLoop.onWrite(() => {\n    if (children !== void 0) {\n      instance.textContent = children;\n    } // Apply CSS styles\n\n\n    for (let name in style) {\n      if (style.hasOwnProperty(name)) {\n        const value = dangerousStyleValue(name, style[name]);\n        if (name === 'float') name = 'cssFloat';else if (isCustomPropRE.test(name)) {\n          instance.style.setProperty(name, value);\n        } else {\n          instance.style[name] = value;\n        }\n      }\n    } // Apply DOM attributes\n\n\n    names.forEach((name, i) => {\n      instance.setAttribute(name, values[i]);\n    });\n\n    if (scrollTop !== void 0) {\n      instance.scrollTop = scrollTop;\n    }\n\n    if (scrollLeft !== void 0) {\n      instance.scrollLeft = scrollLeft;\n    }\n  });\n}\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\n/** The transform-functions\r\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\r\n * that you can pass as keys to your animated component style and that will be\r\n * animated. Perspective has been left out as it would conflict with the\r\n * non-transform perspective style.\r\n */\n\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/; // These keys have \"px\" units by default\n\nconst pxTransforms = /^(translate)/; // These keys have \"deg\" units by default\n\nconst degTransforms = /^(rotate|skew)/;\n/** Add a unit to the value when the value is unit-less (eg: a number) */\n\nconst addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\n/**\r\n * Checks if the input value matches the identity value.\r\n *\r\n *     isValueIdentity(0, 0)              // => true\r\n *     isValueIdentity('0px', 0)          // => true\r\n *     isValueIdentity([0, '0px', 0], 0)  // => true\r\n */\n\n\nconst isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\n/**\r\n * This AnimatedStyle will simplify animated components transforms by\r\n * interpolating all transform function passed as keys in the style object\r\n * including shortcuts such as x, y and z for translateX/Y/Z\r\n */\n\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(_ref) {\n    let x = _ref.x,\n        y = _ref.y,\n        z = _ref.z,\n        style = _objectWithoutPropertiesLoose(_ref, [\"x\", \"y\", \"z\"]);\n\n    /**\r\n     * An array of arrays that contains the values (static or fluid)\r\n     * used by each transform function.\r\n     */\n    const inputs = [];\n    /**\r\n     * An array of functions that take a list of values (static or fluid)\r\n     * and returns (1) a CSS transform string and (2) a boolean that's true\r\n     * when the transform has no effect (eg: an identity transform).\r\n     */\n\n    const transforms = []; // Combine x/y/z into translate3d\n\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, isValueIdentity(xyz, 0)]);\n    } // Pluck any other transform-related props\n\n\n    each(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || '']);\n        transforms.push(transform => [transform, transform === '']);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? 'px' : degTransforms.test(key) ? 'deg' : '';\n        inputs.push(toArray(value));\n        transforms.push(key === 'rotate3d' ? (_ref2) => {\n          let x = _ref2[0],\n              y = _ref2[1],\n              z = _ref2[2],\n              deg = _ref2[3];\n          return [`rotate3d(${x},${y},${z},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)];\n        } : input => [`${key}(${input.map(v => addUnit(v, unit)).join(',')})`, isValueIdentity(input, key.startsWith('scale') ? 1 : 0)]);\n      }\n    });\n\n    if (inputs.length) {\n      style.transform = new SpringTransform(inputs, transforms);\n    }\n\n    super(style);\n  }\n\n}\n/** Coerce any `FluidValue` to its current value */\n\nconst getValue = value => isFluidValue(value) ? value.get() : value;\n\nclass SpringTransform extends AnimationValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this.node = new AnimatedValue(this._compute());\n  } // Required by `AnimationValue` but never used.\n\n\n  get idle() {\n    return true;\n  }\n\n  _compute() {\n    let transform = '';\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getValue(input[0]);\n\n      const _this$transforms$i = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getValue)),\n            t = _this$transforms$i[0],\n            id = _this$transforms$i[1];\n\n      transform += ' ' + t;\n      identity = identity && id;\n    });\n    return identity ? 'none' : transform;\n  }\n  /** @internal */\n\n\n  _attach() {\n    // Start observing our inputs once we have an observer.\n    each(this.inputs, input => each(input, value => isFluidValue(value) && value.addChild(this)));\n  }\n  /** @internal */\n\n\n  _detach() {\n    // Stop observing our inputs once we have no observers.\n    each(this.inputs, input => each(input, value => isFluidValue(value) && value.removeChild(this)));\n  }\n  /** @internal */\n\n\n  onParentChange() {\n    // TODO: only compute once per frame max\n    const value = this._compute();\n\n    this.node.setValue(value);\n\n    this._onChange(value, true);\n  }\n\n}\n\nconst elements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nconst animated = extendAnimated(withAnimated, elements);\n\nGlobals$1.assign({\n  defaultElement: 'div',\n  colorNames,\n  applyAnimatedValues,\n  createStringInterpolator,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  getComponentProps: (_ref) => {\n    let scrollTop = _ref.scrollTop,\n        scrollLeft = _ref.scrollLeft,\n        props = _objectWithoutPropertiesLoose(_ref, [\"scrollTop\", \"scrollLeft\"]);\n\n    return props;\n  }\n});\n\nexport { animated as a, animated };\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"module"}