{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar G = __importStar(require(\"./globals\"));\n\nexports.FluidType = '__$FluidType';\n/** Let the given object be observed by any `FluidObserver` */\n\nexports.makeFluidValue = function (value) {\n  return Object.defineProperty(value, exports.FluidType, {\n    value: 1,\n    writable: true\n  });\n};\n\nexports.isFluidValue = function (value) {\n  return (value && value[exports.FluidType]) > 0;\n};\n\nexports.defineHidden = function (obj, key, value) {\n  return Object.defineProperty(obj, key, {\n    value: value,\n    writable: true,\n    configurable: true\n  });\n};\n\nexports.is = {\n  arr: Array.isArray,\n  obj: function (a) {\n    return !!a && a.constructor.name === 'Object';\n  },\n  fun: function (a) {\n    return typeof a === 'function';\n  },\n  str: function (a) {\n    return typeof a === 'string';\n  },\n  num: function (a) {\n    return typeof a === 'number';\n  },\n  und: function (a) {\n    return a === undefined;\n  }\n};\n/** Compare animatable values */\n\nfunction isEqual(a, b) {\n  if (exports.is.arr(a)) {\n    if (!exports.is.arr(b) || a.length !== b.length) return false;\n\n    for (var i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n\n    return true;\n  }\n\n  return a === b;\n}\n\nexports.isEqual = isEqual; // Not all strings can be animated (eg: {display: \"none\"})\n\nexports.needsInterpolation = function (value) {\n  return exports.is.str(value) && (value[0] == '#' || /\\d/.test(value) || !!(G.colorNames && G.colorNames[value]));\n};\n/** An unsafe object/array/set iterator that allows for better minification */\n\n\nexports.each = function (obj, cb, ctx) {\n  if (exports.is.fun(obj.forEach)) {\n    obj.forEach(cb, ctx);\n  } else {\n    Object.keys(obj).forEach(function (key) {\n      return cb.call(ctx, obj[key], key);\n    });\n  }\n};\n\nexports.toArray = function (a) {\n  return exports.is.und(a) ? [] : exports.is.arr(a) ? a : [a];\n};\n\nexports.useOnce = function (effect) {\n  return react_1.useEffect(effect, []);\n};\n\nexports.useForceUpdate = function () {\n  return react_1.useReducer(function () {\n    return {};\n  }, 0)[1];\n};\n/** Use a value from the previous render */\n\n\nfunction usePrev(value) {\n  var prevRef = react_1.useRef(undefined);\n  react_1.useEffect(function () {\n    prevRef.current = value;\n  });\n  return prevRef.current;\n}\n\nexports.usePrev = usePrev;\n/**\n * React calls `console.warn` when using `useLayoutEffect` on the server.\n * To get around it, we can conditionally `useEffect` on the server (no-op) and\n * `useLayoutEffect` on the client.\n */\n\nexports.useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? react_1.useLayoutEffect : react_1.useEffect;","map":{"version":3,"sources":["../src/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { useEffect, useLayoutEffect, useReducer, useRef } from 'react'\nimport { Indexable, Arrify, FluidValue } from './types'\nimport * as G from './globals'\n\nexport const FluidType = '__$FluidType'\n\n/** Let the given object be observed by any `FluidObserver` */\nexport const makeFluidValue = <T extends Indexable>(value: T): T =>\n  Object.defineProperty(value, FluidType, { value: 1, writable: true })\n\nexport const isFluidValue = (value: any): value is FluidValue =>\n  (value && value[FluidType]) > 0\n\nexport const defineHidden = (obj: any, key: any, value: any) =>\n  Object.defineProperty(obj, key, { value, writable: true, configurable: true })\n\ninterface IsArray {\n  <T>(a: T): a is T & readonly any[]\n}\n\ntype PlainObject<T> = Exclude<T & Indexable, Function | readonly any[]>\n\nexport const is = {\n  arr: Array.isArray as IsArray,\n  obj: <T extends any>(a: T): a is PlainObject<T> =>\n    !!a && a.constructor.name === 'Object',\n  fun: (a: unknown): a is Function => typeof a === 'function',\n  str: (a: unknown): a is string => typeof a === 'string',\n  num: (a: unknown): a is number => typeof a === 'number',\n  und: (a: unknown): a is undefined => a === undefined,\n}\n\n/** Compare animatable values */\nexport function isEqual(a: any, b: any) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false\n    }\n    return true\n  }\n  return a === b\n}\n\n// Not all strings can be animated (eg: {display: \"none\"})\nexport const needsInterpolation = (value: unknown): value is string =>\n  is.str(value) &&\n  (value[0] == '#' ||\n    /\\d/.test(value) ||\n    !!(G.colorNames && G.colorNames[value]))\n\ninterface EachFn {\n  <T = any, This = any>(\n    obj: ReadonlySet<T>,\n    cb: (this: This, value: T) => void,\n    ctx?: This\n  ): void\n\n  <P = any, T = any, This = any>(\n    obj: ReadonlyMap<P, T>,\n    cb: (this: This, value: T, key: P) => void,\n    ctx?: This\n  ): void\n\n  <T = any, This = any>(\n    arr: readonly T[],\n    cb: (this: This, value: T, index: number) => void,\n    ctx?: This\n  ): void\n\n  <T extends Indexable = any, This = any>(\n    obj: T,\n    cb: (this: This, value: T[keyof T], key: keyof T) => void,\n    ctx?: This\n  ): void\n}\n\n/** An unsafe object/array/set iterator that allows for better minification */\nexport const each: EachFn = (obj: Indexable, cb: any, ctx: any) => {\n  if (is.fun(obj.forEach)) {\n    obj.forEach(cb, ctx)\n  } else {\n    Object.keys(obj).forEach(key => cb.call(ctx, obj[key], key))\n  }\n}\n\nexport const toArray = <T>(a: T): Arrify<Exclude<T, void>> =>\n  is.und(a) ? [] : is.arr(a) ? (a as any) : [a]\n\nexport const useOnce = (effect: React.EffectCallback) => useEffect(effect, [])\n\nexport const useForceUpdate = () => useReducer(() => ({}), 0)[1] as (() => void)\n\n/** Use a value from the previous render */\nexport function usePrev<T>(value: T): T | undefined {\n  const prevRef = useRef<any>(undefined)\n  useEffect(() => {\n    prevRef.current = value\n  })\n  return prevRef.current\n}\n\ndeclare const window: any\n\n/**\n * React calls `console.warn` when using `useLayoutEffect` on the server.\n * To get around it, we can conditionally `useEffect` on the server (no-op) and\n * `useLayoutEffect` on the client.\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}